CREATE TABLE AUTHOR (
AU_ID        NUMBER(7,0) PRIMARY KEY,
AU_FNAME     VARCHAR2(30) NOT NULL  ,
AU_LNAME     VARCHAR2(30) NOT NULL  ,
AU_BIRTHYEAR NUMBER(4)
);
CREATE TABLE PATRON (
PAT_ID      NUMBER(10,0) PRIMARY KEY,
PAT_FNAME   VARCHAR2(20) NOT NULL   ,
PAT_LNAME   VARCHAR2(20) NOT NULL   ,
PAT_TYPE    VARCHAR2(10) NOT NULL
);
CREATE TABLE BOOK (
BOOK_NUM   NUMBER(10,0) PRIMARY KEY,
BOOK_TITLE VARCHAR2(120) NOT NULL  ,
BOOK_YEAR  NUMBER(4)               ,
BOOK_COST  NUMBER(8,2)             ,
BOOK_SUBJECT VARCHAR2(120)         ,
PAT_ID    NUMBER(10) REFERENCES PATRON
);
CREATE TABLE CHECKOUT (
CHECK_NUM         NUMBER(15) PRIMARY KEY,
BOOK_NUM          NUMBER(10) REFERENCES BOOK,
PAT_ID            NUMBER(10) REFERENCES PATRON,
CHECK_OUT_DATE    DATE DEFAULT SYSDATE,
CHECK_DUE_DATE    DATE,
CHECK_IN_DATE     DATE
);
CREATE TABLE WRITES (
BOOK_NUM  NUMBER(10) REFERENCES BOOK,
AU_ID     NUMBER(7) REFERENCES AUTHOR,
CONSTRAINT WRITES_BOOK_AU_PK PRIMARY KEY (BOOK_NUM, AU_ID)
);
--a--
SELECT PAT_ID, PAT_FNAME, PAT_LNAME 
FROM PATRON WHERE PAT_ID NOT IN(SELECT PAT_ID FROM CHECKOUT) 
ORDER BY PAT_LNAME, PAT_FNAME;
--b--
SELECT AU_LNAME, AU_FNAME, BOOK_TITLE, BOOK_COST
FROM AUTHOR JOIN WRITES ON AUTHOR.AU_ID = WRITES.AU_ID JOIN BOOK ON WRITES.BOOK_NUM = BOOK.BOOK_NUM
ORDER BY BOOK.BOOK_NUM, AUTHOR.AU_ID;
--c--
SELECT BOOK_NUM, BOOK_TITLE, BOOK_COST
FROM BOOK
WHERE BOOK_COST = (SELECT Min (BOOK_COST) FROM BOOK) ORDER BY BOOK_NUM;
--d--
SELECT BOOK_NUM, Count(*) AS "Times Checked Out" FROM CHECKOUT
GROUP BY BOOK_NUM
ORDER BY COUNT(*) DESC, BOOK_NUM DESC;
--e--
 SELECT AU_ID,AU_FNAME,AU_LNAME FROM AUTHOR 
 WHERE AU_ID NOT IN (SELECT AU_ID FROM WRITES,
 BOOK WHERE BOOK.BOOK_NUM=WRITES.BOOK_NUM AND BOOK.BOOK_SUBJECT = 'Programming');

